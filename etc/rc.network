#
# rc.network - startup script for networking
#

# Set the hostname
echo -n 'Setting hostname:'				>/dev/console 2>&1
hostname ${hostname}					>/dev/console 2>&1
hostid ${hostname}					>/dev/console 2>&1
echo " ${hostname}."					>/dev/console 2>&1

# Disable networking if not supported
if [ `testnet` != YES ]; then
	echo 'Networking is not available.'		>/dev/console 2>&1
	inet_enable=no
fi

# Configure loopback
if [ "${inet_enable}" = yes ]; then
	echo 'Configuring loopback:'			>/dev/console 2>&1
	ifconfig lo0 inet localhost up -trailers	>/dev/console 2>&1
	ifconfig lo0					>/dev/console 2>&1
fi

# Configure interfaces
if [ "${inet_enable}" = yes -a -n "${inet_interfaces}" ]; then
	echo 'Configuring interfaces:'			>/dev/console 2>&1
	# Iterate interfaces
	for if in ${inet_interfaces}; do
		# Extract configuration
		a=`eval echo \\$inet_${if}_address`
		n=`eval echo \\$inet_${if}_netmask`
		b=`eval echo \\$inet_${if}_broadcast`
		# Print configuration
		#echo "  ${if}: address ${a}"		>/dev/console 2>&1
		#echo "  ${if}: netmask ${n}"		>/dev/console 2>&1
		#echo "  ${if}: broadcast ${b}"		>/dev/console 2>&1
		# Apply configuration
		ifconfig ${if} \
			inet ${a} \
			netmask ${n} \
			broadcast ${b} \
			up -trailers			>/dev/console 2>&1
		# Show configuration
		ifconfig ${if}				>/dev/console 2>&1
	done
fi

# Configure default gateway
if [ "${inet_enable}" = yes -a -n "${inet_gateway}" ]; then
	echo "Default gateway: ${inet_gateway}."	>/dev/console 2>&1
	route add default "${inet_gateway}" 1		>/dev/console 2>&1
fi
